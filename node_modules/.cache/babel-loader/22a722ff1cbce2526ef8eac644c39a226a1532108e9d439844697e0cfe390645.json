{"ast":null,"code":"var _jsxFileName = \"/home/mwandu-byte/Desktop/PROJECT/AIDEMO/weather-dashboard/src/components/RecentSearches.js\";\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst HistoricalWeather = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n\n  // Prepare data for chart\n  const chartData = {\n    labels: data.map(day => new Date(day.date).toLocaleDateString('en-US', {\n      weekday: 'short',\n      day: 'numeric'\n    })).reverse(),\n    datasets: [{\n      label: 'Max Temperature (째C)',\n      data: data.map(day => day.day.maxtemp_c).reverse(),\n      borderColor: 'rgba(255, 99, 132, 1)',\n      // Red\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      tension: 0.4\n    }, {\n      label: 'Min Temperature (째C)',\n      data: data.map(day => day.day.mintemp_c).reverse(),\n      borderColor: 'rgba(54, 162, 235, 1)',\n      // Blue\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      tension: 0.4\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        labels: {\n          color: '#333' // default light mode\n        },\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Past 7 Days Temperature Trend',\n        color: '#333',\n        font: {\n          size: 18\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#666'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#666'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center mb-4 text-gray-900 dark:text-gray-100\",\n      children: \"Historical Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md h-[400px]\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          ...options,\n          plugins: {\n            ...options.plugins,\n            legend: {\n              ...options.plugins.legend,\n              labels: {\n                color: '#111',\n                // fallback\n                // Auto-detect dark mode\n                generateLabels: chart => {\n                  const isDark = document.documentElement.classList.contains('dark');\n                  return ChartJS.defaults.plugins.legend.labels.generateLabels(chart).map(label => ({\n                    ...label,\n                    fontColor: isDark ? '#eee' : '#333'\n                  }));\n                }\n              }\n            },\n            title: {\n              ...options.plugins.title,\n              color: document.documentElement.classList.contains('dark') ? '#eee' : '#111'\n            }\n          },\n          scales: {\n            x: {\n              ticks: {\n                color: document.documentElement.classList.contains('dark') ? '#ccc' : '#444'\n              }\n            },\n            y: {\n              ticks: {\n                color: document.documentElement.classList.contains('dark') ? '#ccc' : '#444'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_c = HistoricalWeather;\nexport default HistoricalWeather;\nvar _c;\n$RefreshReg$(_c, \"HistoricalWeather\");","map":{"version":3,"names":["Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","HistoricalWeather","data","length","chartData","labels","map","day","Date","date","toLocaleDateString","weekday","reverse","datasets","label","maxtemp_c","borderColor","backgroundColor","tension","mintemp_c","options","responsive","maintainAspectRatio","plugins","legend","color","position","title","display","text","font","size","scales","x","ticks","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","generateLabels","chart","isDark","document","documentElement","classList","contains","defaults","fontColor","_c","$RefreshReg$"],"sources":["/home/mwandu-byte/Desktop/PROJECT/AIDEMO/weather-dashboard/src/components/RecentSearches.js"],"sourcesContent":["import { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst HistoricalWeather = ({ data }) => {\n  if (!data || data.length === 0) return null;\n\n  // Prepare data for chart\n  const chartData = {\n    labels: data\n      .map(day =>\n        new Date(day.date).toLocaleDateString('en-US', {\n          weekday: 'short',\n          day: 'numeric',\n        })\n      )\n      .reverse(),\n    datasets: [\n      {\n        label: 'Max Temperature (째C)',\n        data: data.map(day => day.day.maxtemp_c).reverse(),\n        borderColor: 'rgba(255, 99, 132, 1)', // Red\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        tension: 0.4,\n      },\n      {\n        label: 'Min Temperature (째C)',\n        data: data.map(day => day.day.mintemp_c).reverse(),\n        borderColor: 'rgba(54, 162, 235, 1)', // Blue\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        labels: {\n          color: '#333', // default light mode\n        },\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Past 7 Days Temperature Trend',\n        color: '#333',\n        font: {\n          size: 18,\n        },\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#666',\n        },\n      },\n      y: {\n        ticks: {\n          color: '#666',\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"mt-8\">\n      <h2 className=\"text-2xl font-bold text-center mb-4 text-gray-900 dark:text-gray-100\">\n        Historical Weather\n      </h2>\n      <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md h-[400px]\">\n        <Line\n          data={chartData}\n          options={{\n            ...options,\n            plugins: {\n              ...options.plugins,\n              legend: {\n                ...options.plugins.legend,\n                labels: {\n                  color: '#111', // fallback\n                  // Auto-detect dark mode\n                  generateLabels: chart => {\n                    const isDark =\n                      document.documentElement.classList.contains('dark');\n                    return ChartJS.defaults.plugins.legend.labels.generateLabels(\n                      chart\n                    ).map(label => ({\n                      ...label,\n                      fontColor: isDark ? '#eee' : '#333',\n                    }));\n                  },\n                },\n              },\n              title: {\n                ...options.plugins.title,\n                color: document.documentElement.classList.contains('dark')\n                  ? '#eee'\n                  : '#111',\n              },\n            },\n            scales: {\n              x: {\n                ticks: {\n                  color: document.documentElement.classList.contains('dark')\n                    ? '#ccc'\n                    : '#444',\n                },\n              },\n              y: {\n                ticks: {\n                  color: document.documentElement.classList.contains('dark')\n                    ? '#ccc'\n                    : '#444',\n                },\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HistoricalWeather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/mwandu-byte/Desktop/PROJECT/AIDEMO/weather-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport CurrentWeather from './components/CurrentWeather';\nimport Forecast from './components/Forecast';\nimport HistoricalWeather from './components/HistoricalWeather';\nimport RecentSearches from './components/RecentSearches';\nimport Navbar from './components/Navbar';\nimport { DarkModeProvider } from './context/DarkModeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [historicalData, setHistoricalData] = useState(null);\n  const [error, setError] = useState(null);\n  const [recentSearches, setRecentSearches] = useState([]);\n\n  // Load recent searches from localStorage\n  useEffect(() => {\n    const storedSearches = JSON.parse(localStorage.getItem('recentSearches'));\n    if (storedSearches) {\n      setRecentSearches(storedSearches);\n    }\n  }, []);\n  const handleSearch = async location => {\n    const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n    const currentWeatherUrl = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${location}`;\n    const forecastUrl = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=5`;\n    try {\n      // Fetch current weather\n      const weatherResponse = await fetch(currentWeatherUrl);\n      const weather = await weatherResponse.json();\n      if (weather.error) throw new Error(weather.error.message);\n      setWeatherData(weather);\n\n      // Fetch forecast\n      const forecastResponse = await fetch(forecastUrl);\n      const forecast = await forecastResponse.json();\n      if (forecast.error) throw new Error(forecast.error.message);\n      setForecastData(forecast.forecast.forecastday);\n\n      // Fetch historical data\n      const historicalPromises = [];\n      for (let i = 1; i <= 7; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        const formattedDate = date.toISOString().split('T')[0];\n        const historicalUrl = `https://api.weatherapi.com/v1/history.json?key=${apiKey}&q=${location}&dt=${formattedDate}`;\n        historicalPromises.push(fetch(historicalUrl).then(res => res.json()));\n      }\n      const historicalResults = await Promise.all(historicalPromises);\n      setHistoricalData(historicalResults.map(res => res.forecast.forecastday[0]));\n\n      // Clear errors\n      setError(null);\n\n      // Save recent search\n      if (!recentSearches.includes(location)) {\n        const updatedSearches = [location, ...recentSearches.slice(0, 4)];\n        setRecentSearches(updatedSearches);\n        localStorage.setItem('recentSearches', JSON.stringify(updatedSearches));\n      }\n    } catch (err) {\n      setError(err.message);\n      setWeatherData(null);\n      setForecastData(null);\n      setHistoricalData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 dark:bg-gray-900 min-h-screen text-gray-900 dark:text-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen bg-white dark:bg-dark-900 text-gray-900 dark:text-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-center my-8\",\n          children: \"Weather Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecentSearches, {\n          searches: recentSearches,\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-center\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), weatherData && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          data: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 27\n        }, this), forecastData && /*#__PURE__*/_jsxDEV(Forecast, {\n          data: forecastData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }, this), historicalData && /*#__PURE__*/_jsxDEV(HistoricalWeather, {\n          data: historicalData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zR2Q0TkPmEU/9hMpDMFq5xKByW8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Search","CurrentWeather","Forecast","HistoricalWeather","RecentSearches","Navbar","DarkModeProvider","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","forecastData","setForecastData","historicalData","setHistoricalData","error","setError","recentSearches","setRecentSearches","storedSearches","JSON","parse","localStorage","getItem","handleSearch","location","apiKey","process","env","REACT_APP_WEATHER_API_KEY","currentWeatherUrl","forecastUrl","weatherResponse","fetch","weather","json","Error","message","forecastResponse","forecast","forecastday","historicalPromises","i","date","Date","setDate","getDate","formattedDate","toISOString","split","historicalUrl","push","then","res","historicalResults","Promise","all","map","includes","updatedSearches","slice","setItem","stringify","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","searches","data","_c","$RefreshReg$"],"sources":["/home/mwandu-byte/Desktop/PROJECT/AIDEMO/weather-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport CurrentWeather from './components/CurrentWeather';\nimport Forecast from './components/Forecast';\nimport HistoricalWeather from './components/HistoricalWeather';\nimport RecentSearches from './components/RecentSearches';\nimport Navbar from './components/Navbar';\nimport { DarkModeProvider } from './context/DarkModeContext';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [historicalData, setHistoricalData] = useState(null);\n  const [error, setError] = useState(null);\n  const [recentSearches, setRecentSearches] = useState([]);\n\n  // Load recent searches from localStorage\n  useEffect(() => {\n    const storedSearches = JSON.parse(localStorage.getItem('recentSearches'));\n    if (storedSearches) {\n      setRecentSearches(storedSearches);\n    }\n  }, []);\n\n  const handleSearch = async (location) => {\n    const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n    const currentWeatherUrl = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${location}`;\n    const forecastUrl = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=5`;\n\n    try {\n      // Fetch current weather\n      const weatherResponse = await fetch(currentWeatherUrl);\n      const weather = await weatherResponse.json();\n      if (weather.error) throw new Error(weather.error.message);\n      setWeatherData(weather);\n\n      // Fetch forecast\n      const forecastResponse = await fetch(forecastUrl);\n      const forecast = await forecastResponse.json();\n      if (forecast.error) throw new Error(forecast.error.message);\n      setForecastData(forecast.forecast.forecastday);\n\n      // Fetch historical data\n      const historicalPromises = [];\n      for (let i = 1; i <= 7; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        const formattedDate = date.toISOString().split('T')[0];\n        const historicalUrl = `https://api.weatherapi.com/v1/history.json?key=${apiKey}&q=${location}&dt=${formattedDate}`;\n        historicalPromises.push(fetch(historicalUrl).then(res => res.json()));\n      }\n      const historicalResults = await Promise.all(historicalPromises);\n      setHistoricalData(historicalResults.map(res => res.forecast.forecastday[0]));\n\n      // Clear errors\n      setError(null);\n\n      // Save recent search\n      if (!recentSearches.includes(location)) {\n        const updatedSearches = [location, ...recentSearches.slice(0, 4)];\n        setRecentSearches(updatedSearches);\n        localStorage.setItem('recentSearches', JSON.stringify(updatedSearches));\n      }\n    } catch (err) {\n      setError(err.message);\n      setWeatherData(null);\n      setForecastData(null);\n      setHistoricalData(null);\n    }\n  };\n\n  return (\n    <DarkModeProvider>\n      <div className=\"bg-gray-100 dark:bg-gray-900 min-h-screen text-gray-900 dark:text-gray-100\">\n       <div className=\"min-h-screen bg-white dark:bg-dark-900 text-gray-900 dark:text-gray-100\">\n          <Navbar />\n          <h1 className=\"text-4xl font-bold text-center my-8\">Weather Dashboard</h1>\n          <Search onSearch={handleSearch} />\n          <RecentSearches searches={recentSearches} onSearch={handleSearch} />\n          {error && <p className=\"text-red-500 text-center\">{error}</p>}\n          {weatherData && <CurrentWeather data={weatherData} />}\n          {forecastData && <Forecast data={forecastData} />}\n          {historicalData && <HistoricalWeather data={historicalData} />}\n        </div>\n      </div>\n    </DarkModeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}